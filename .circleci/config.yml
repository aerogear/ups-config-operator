# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
    docker:
      # specify the version
      - image: circleci/golang:1.10

    #### TEMPLATE_NOTE: go expects specific checkout path representing url
    #### expecting it in the form of
    ####   /go/src/github.com/circleci/go-tool
    ####   /go/src/bitbucket.org/circleci/go-tool
    working_directory: /go/src/github.com/aerogear/ups-config-operator
    steps:
      - checkout
      # specify any bash command here prefixed with `run: `
      - run:
          name: Install Glide
          command: curl https://glide.sh/get | sh
      - run:
          name: Install Mockery
          command: go get github.com/vektra/mockery/.../
      - run: make setup
      - run: make test
      - run: make build_linux

  docker_push_master:
    working_directory: /go/src/github.com/aerogear/ups-config-operator
    docker:
      - image: circleci/golang:1.9
    steps:
      - checkout
      - run:
          name: Install Glide
          command: curl https://glide.sh/get | sh
      - run: make setup
      - setup_remote_docker
      - run: make build_linux
      - run: make docker_build_master
      - run: make docker_push_master

  docker_release:
    working_directory: /go/src/github.com/aerogear/ups-config-operator
    docker:
      - image: circleci/golang:1.9
    steps:
      - checkout
      - run:
          name: Install Glide
          command: curl https://glide.sh/get | sh
      - run: make setup
      - setup_remote_docker
      - run: make docker_build_release
      - run: make docker_push_release

workflows:
  version: 2
  build_and_push:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - docker_push_master:
          requires:
            - build
          filters:
            branches:
              only:
                - master
      - docker_release:
          requires:
            - build
          filters:
            tags:
              only: /\d\.\d\.\d/
            branches:
              ignore: /.*/
